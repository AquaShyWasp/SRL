{$DEFINE SRL_DRAWING_INCLUDED}
{$IFNDEF SRL_UTILS}
  {$I SRL/utils.simba}
{$ENDIF}

(*
Drawing
=======
The drawing file holds TMufasaBitmap drawing functions to aid drawing onto bitmaps.

The source for this file can be found `here <https://github.com/SRL/SRL/blob/master/shared/drawing.simba>`.
*)

const
  clBlack      = TColor($000000);
  clMaroon     = TColor($000080);
  clGreen      = TColor($008000);
  clOlive      = TColor($008080);
  clNavy       = TColor($800000);
  clPurple     = TColor($800080);
  clTeal       = TColor($808000);
  clRed        = TColor($0000FF);
  clLime       = TColor($00FF00);
  clYellow     = TColor($00FFFF);
  clBlue       = TColor($FF0000);
  clFuchsia    = TColor($FF00FF);
  clAqua       = TColor($FFFF00);
  clGray       = TColor($808080);
  clSilver     = TColor($C0C0C0);
  clLtGray     = TColor($C0C0C0);
  clMedGray    = TColor($A4A0A0);
  clDkGray     = TColor($808080);
  clWhite      = TColor($FFFFFF);
  clMoneyGreen = TColor($65BB85);
  clSkyBlue    = TColor($F0CAA6);
  clCream      = TColor($F0FBFF);
  clPink       = TColor($B3A2EA);
  clOrange     = TColor($0099FF);
  
(*
TMufasaBitmap.FromClient
~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.FromClient(Area: TBox);

Copy client to bitmap.
*)
procedure TMufasaBitmap.FromClient(Area: TBox=[0,0,-1,-1]);
var 
  W,H: Int32;
begin
  client.GetIOManager.GetDimensions(W,H);
  if Area = TBox([0,0,-1,-1]) then Area := [0,0,W-1,H-1];
  if (self <> nil) and (self.GetIndex() <> -1) then self.Free();
  Self.Init(client.GetMBitmaps);
  Self.CopyClientToBitmap(client.GetIOManager, True, Area.X1, Area.Y1, Area.X2, Area.Y2);
end;
  
(*
TMufasaBitmap.Clear
~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.Clear();

Will clear the entire TMufasaBitmap

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.Clear();

*)
procedure TMufasaBitmap.Clear();
begin
  self.DrawClear(0);
end;

(*
TMufasaBitmap.ClearArea
~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.ClearArea(area: TBox);

Will clear the desired area of the TMufasaBitmap

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.ClearArea(intToBox(5, 5, 10, 10));

*)
procedure TMufasaBitmap.ClearArea(area: TBox);
begin
  self.Rectangle(area, 0);
end;


(*
TMufasaBitmap.ClearAllBut
~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.ClearAllBut(Area: TBox);

Will clear the image, except for the given area.
*)
procedure TMufasaBitmap.ClearAllBut(Area: TBox);
var
  CL: TBox;
begin
  CL := [0, 0, Self.GetWidth()-1, Self.GetHeight()-1];
  Area.X1 := Max(CL.X1, Area.X1-1); 
  Area.X2 := Min(CL.X2, Area.X2+1);
  Area.Y1 := Max(CL.Y1, Area.Y1-1); 
  Area.Y2 := Min(CL.Y2, Area.Y2+1);
  
  Self.Rectangle(TBox([CL.X1,   CL.Y1,   Area.x1, Area.y1]), 0);  //Top Left
  Self.Rectangle(TBox([CL.X1,   Area.y1, Area.x1, Area.y2]), 0);  //Mid Left
  Self.Rectangle(TBox([CL.X1,   Area.y1, Area.x1, CL.y2  ]), 0);  //Btm Left
  Self.Rectangle(TBox([Area.x1, CL.Y1,   Area.x2, Area.y1]), 0);  //Top Mid
  Self.Rectangle(TBox([Area.x1, Area.y2, Area.x2, CL.y2  ]), 0);  //Btm Mid
  Self.Rectangle(TBox([Area.x2, CL.Y1,   CL.x2,   Area.y1]), 0);  //Top Right
  Self.Rectangle(TBox([Area.x2, Area.y1, CL.x2,   Area.y2]), 0);  //Mid Right
  Self.Rectangle(TBox([Area.x2, Area.y1, CL.x2,   CL.y2  ]), 0);  //Btm Right
end;

(*
TMufasaBitmap.AvgBrightness
~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.AvgBrightness(Area: TBox = [0,0,-1,-1]);

Returns a value between 0 and 100 that defines how bright the image is.
*)
function TMufasaBitmap.AvgBrightness(Area: TBox = [0,0,-1,-1]): Int32; constref;
var
  x,y,t: Int64;
  px:TRGB32;
begin
  if Area.X2 < 0 then Area.X2 := self.GetWidth() + Area.X2;
  if Area.Y2 < 0 then Area.Y2 := self.GetHeight() + Area.Y2;

  for y:=Area.Y1 to Area.Y2 do
  begin
    t := 0;
    for x:=Area.X1 to Area.X2 do
    begin
      px := TRGB32(self.GetPixel(x,y));
      t += Round((px.R+px.G+px.B) / 3 * 0.392);
    end;
    Result += t div self.GetWidth();
  end;
  Result /= self.GetHeight();
end;


(*
TMufasaBitmap.PeakBrightness
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.PeakBrightness(Area: TBox = [0,0,-1,-1]);

Returns the maximum brightness in the image in the range `0..100`.
*)
function TMufasaBitmap.PeakBrightness(Area: TBox = [0,0,-1,-1]): Int32; constref;
var
  x,y,t: Int64;
  px:TRGB32;
begin
  if Area.X2 < 0 then Area.X2 := self.GetWidth() + Area.X2;
  if Area.Y2 < 0 then Area.Y2 := self.GetHeight() + Area.Y2;

  for y:=Area.Y1 to Area.Y2 do
    for x:=Area.X1 to Area.X2 do
    begin 
      px := TRGB32(self.GetPixel(x,y));
      t := Max(Max(px.R,px.G),px.B);
      if t > Result then Result := t;
    end;
  Result := Round(Result / 255 * 100);
end;


(*
TMufasaBitmap.DrawBox
~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawBox(box: TBox; fill: boolean; color: TColor);

Draws a TBox onto the TMufasaBitmap

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.DrawBox(intToBox(50, 50, 345, 345), false, clLime);

*)
procedure TMufasaBitmap.DrawBox(box: TBox; fill: boolean; color: TColor);
var
  TPA: TPointArray;
begin
  if not fill then
  begin
    try
      TPA := EdgeFromBox(box);
    except
      TPA := [Point(box.x1, box.y1)];
    finally
      self.DrawTPA(TPA, color);
    end;
  end else
    self.Rectangle(box, color);
end;

(*
TMufasaBitmap.DrawBox
~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawBox(pt:TPoint; Radius:UInt32; Fill: Boolean; color: TColor);

Draws a TBox onto the TMufasaBitmap
*)
procedure TMufasaBitmap.DrawBox(pt:TPoint; Radius:UInt32; fill: Boolean; color: TColor); overload;
var
  TPA: TPointArray;
begin
  if not fill then
  begin
    if Radius = 0 then
      TPA := [pt]
    else
      TPA := EdgeFromBox(TBox([pt.x-Radius,pt.y-Radius, pt.x+Radius,pt.y+Radius]));
    self.DrawTPA(TPA, color);
  end else
    self.Rectangle(TBox([pt.x-Radius,pt.y-Radius, pt.x+Radius,pt.y+Radius]), color);
end;

(*
TMufasaBitmap.DrawBox
~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawBox(box:TBox; color:TColor = clRed); overload;

Overloaded function, will draw the outline of the "box" and includes a optional
color parameter (default red).

.. note::

    - by Ollybest
    - Last Updated: 19 August 2013 by Ollybest

Example:

.. code-block:: pascal

    bmp.DrawBox(IntToBox(50, 50, 345, 345));

*)
procedure TMufasaBitmap.DrawBox(box: TBox; color: TColor = clRed); overload;
begin
  self.DrawBox(box, false, color);
end;

(*
TMufasaBitmap.DrawBox; overload
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawBox(x1,y1,x2,y2:Integer; fill:Boolean; color:TColor); overload;

Draws a box using the x1, y1, x2, y2 parameters, will fill if 'fill' is set to
true using color 'color'.

.. note::

    - by Olly
    - Last Updated: 29 October 2013 by Olly

Example:

.. code-block:: pascal

    bmp.DrawBox(Box(50, 50, 345, 345));
*)
procedure TMufasaBitmap.DrawBox(x1,y1,x2,y2:Int32; fill:Boolean; color:TColor); overload;
begin
  self.DrawBox(IntToBox(x1, y1, x2, y2), fill, color);
end;

(*
TMufasaBitmap.DrawBoxes
~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawBoxes(boxArr: TBoxArray; fill: boolean; color: TColor);

Draws a TBoxArray onto the TMufasaBitmap.

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.DrawBoxes([Box(10, 10, 20, 20), Box(50, 50, 250, 250),
                     Box(440, 440, 600, 600)], true, clRed);

*)
procedure TMufasaBitmap.DrawBoxes(boxArr: TBoxArray; fill: boolean; color: TColor);
var
  i, h:Int32;
begin
  h := High(boxArr);

  for i:=0 to h do
    self.DrawBox(boxArr[i], fill, color);
end;

(*
TMufasaBitmap.DrawRect
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawRect(Rect: TRectangle; color: TColor);

Draws a TRectangle onto the TMufasaBitmap
*)
procedure TMufasaBitmap.DrawRect(Rect: TRectangle; color: TColor);
var
  TPA: TPointArray;
begin
  TPA := Rect.ToTPA().Connect();
  FilterPointsBox(TPA, 0,0,Self.GetWidth()-1,Self.GetHeight()-1);
  Self.DrawTPA(TPA, color);
end;

procedure TMufasaBitmap.DrawCuboid(Top, Btm: TRectangle; color: Int32);
begin
  Self.DrawRect([Top.Left, Top.Btm, Btm.Btm, Btm.Left], color);
  Self.DrawRect([Top.Top, Top.Right, Btm.Right, Btm.Top], color);
  Self.DrawRect([Top.Top, Btm.Top, Btm.Left, Top.Left], color);
  Self.DrawRect([Top.Right, Btm.Right, Btm.Btm, Top.Btm], color);
end;

(*
TMufasaBitmap.DrawPoly
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawPoly(Poly: TPointArray; color: TColor);

Draws a polygon onto the TMufasaBitmap
*)
procedure TMufasaBitmap.DrawPoly(Poly: TPointArray; color: TColor);
begin
  Self.DrawTPA(Poly.Connect(), color);
end;

(*
TMufasaBitmap.DrawBitmap
~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawBitmap(bmp: Integer; pnt: TPoint);

Draws a bitmap onto the TMufasaBitmap at the desired point.

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.DrawBitmap(bmp, point(50, 50));

*)
procedure TMufasaBitmap.DrawBitmap(bmp: Integer; pnt: TPoint);
var
  img:TMufasaBitmap;
begin
  if (BitmapExists(bmp)) then
  begin
    img := GetMufasaBitmap(bmp);
    img.DrawTransparent(pnt.x, pnt.y, self)
  end else
    WriteLn('-- ERROR: TMufasaBitmap.DrawBitmap(): bitmap does not exist');
end;

(*
TMufasaBitmap.DrawBitmap; overload
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    function TMufasaBitmap.DrawBitmap(path: string; pt: TPoint): boolean; overload;

Same as TMufasaBitmap.DrawBitmap but will load a bitmap from a file specified
by the paramter "path", will return if succesful or not.

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.DrawBitmap('simba/scripts/foo.png', point(11, 11));

*)
function TMufasaBitmap.DrawBitmap(path: string; pt: TPoint): boolean; overload;
var
  bmp:Integer;
begin
  result := FileExists(path);

  if not result then
  begin
    WriteLn('-- ERROR: TMufasaBitmap.DrawBitmap(): File path does not exist ("' + path + '"), result = false');
    exit;
  end;

  bmp := LoadBitmap(path);
  self.DrawBitmap(bmp, pt);
  FreeBitmap(bmp);
end;

(*
TMufasaBitmap.DrawCross
~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawCross(pt: TPoint; size: Integer; color: TColor);

Draws a cross on the TMufasaBitmap at the TPoint ``pt`` with the desired size.

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.DrawCross(Point(200, 200), 4, clLime);

*)
procedure TMufasaBitmap.DrawCross(pt: TPoint; Radius: Integer; color: TColor);
begin
  Radius := Round(Radius/2*Sqrt(2));
  if (Radius < 1) then
    exit();

  try self.LineTo(Point(pt.x - Radius, pt.y - Radius), Point(pt.x + Radius, pt.y + Radius), color);
  except end;
  try self.LineTo(Point(pt.x + Radius, pt.y - Radius), Point(pt.x - Radius, pt.y + Radius), color);
  except end;
end;

(*
TMufasaBitmap.DrawEllipse
~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawEllipse(const pnt: TPoint; const xRadius, yRadius: Integer; const fill: boolean; const color: TColor);

Draws an ellipse on the TMufasaBitmap defined by 'pnt', 'xRadius', and
'yRadius'. If 'fill' is true it will fill the ellipse, otherwise it draws just
the border.

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.DrawEllipse(point(500, 500), 20, 50, true, clLime);

*)
procedure TMufasaBitmap.DrawEllipse(const pnt: TPoint; const xRadius, yRadius: Integer; const fill: boolean; const color: TColor);
var
  tpa: TPointArray;
begin
  tpa := TPAFromEllipse(pnt.x, pnt.y, xRadius, yRadius);

  if (fill) then
    FillEllipse(tpa);

  self.DrawTPA(tpa, color);
end;

(*
TMufasaBitmap.DrawCircle
~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawCircle(pnt: TPoint; radius: Integer; fill: boolean; color: TColor);

Draws a circle on the TMufasaBitmap defined by 'pnt' and 'radius'. If 'fill'
is true it will fill the circle, otherwise it draws just the border.

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.DrawCircle(point(500, 500), 50, false, clLime);

*)
procedure TMufasaBitmap.DrawCircle(pnt: TPoint; radius: Integer; fill: boolean; color: TColor);
begin
  self.DrawEllipse(pnt, radius, radius, fill, color);
end;

(*
TMufasaBitmap.DrawClippedText
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawClippedText(txt: string; pt: TPoint; font: string; shadow: boolean; color: TColor);

Same as drawText, but is clipped so it won't draw off the bounds of the bitmap.

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    image.DrawClippedText('hello world!', point(55, 55), 'StatChars07', true, clLime);
*)
procedure TMufasaBitmap.DrawClippedText(txt: string; pt: TPoint; font: string; shadow: boolean; color: TColor);
var
  tpa, tpaShadow: TPointArray;
  w,h: Int32;
begin
  TPAFromText(txt, font, w,h);
  OffsetTPA(TPA, pt);

  if (shadow) then
  begin
    tpaShadow := CopyTPA(tpa);
    OffsetTPA(tpaShadow, point(1, 1));
    FilterPointsBox(tpaShadow, 0, 0, self.GetWidth()-1, self.GetHeight()-1);
    self.DrawTPA(tpaShadow, $000000);
  end;

  FilterPointsBox(tpa, 0, 0, self.GetWidth()-1, self.GetHeight()-1);
  self.DrawTPA(tpa, color);
end;

(*
TMufasaBitmap.DrawTextLines
~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

    procedure TMufasaBitmap.DrawTextLines(txtArr: TStringArray; pnt: TPoint; font: string; shadow: boolean; color: TColor);

Draws text onto the TMufasaBitmap, each index in the txtArr is put on a different line.

.. note::

    - by Ollybest
    - Last Updated: 19 July 2013 by Ollybest

**Example:**

.. code-block:: pascal

    image.drawTextLines(['olly', 'is', 'the', 'best', ':D'], point(2, 2), 'StatChars07', false, clRed);

*)
procedure TMufasaBitmap.DrawTextLines(txtArr: TStringArray; pnt: TPoint; font: string; shadow: boolean; color: TColor);
var
  ATPA: T2DPointArray;
  TPA, shadowTPA: TPointArray;
  w, h, i, l: Integer;
begin
  l := Length(txtArr);
  setLength(ATPA, l);

  for i := 0 to (l-1) do
  begin
    ATPA[i] := TPAFromText(txtArr[i], font, w, h);
    OffsetTPA(ATPA[i], point(pnt.x, pnt.y + 1 + (i * h)));
  end;

  TPA := MergeATPA(ATPA);

  if (shadow) then
  begin
    shadowTPA := CopyTPA(TPA);
    OffsetTPA(shadowTPA, Point(1, 1));
    self.DrawTPA(shadowTPA, $000000);
  end;

  self.DrawTPA(TPA, color);
end;

procedure TMufasaBitmap.DrawCrosshairs(const box: TBox; const pt: TPoint; const color: TColor; const boxColor: Integer = -1);
begin
  self.Rectangle(TBox([box.x1, box.y1 + pt.y, box.x2, box.y1 + pt.y]), color); // faster than LineTo :)
  self.Rectangle(TBox([box.x1 + pt.x, box.y1, box.x1 + pt.x, box.y2]), color);

  if (boxColor > -1) then
    self.DrawBox(box, false, boxColor);
end;

procedure TMufasaBitmap.Debug;
begin
  ShowBitmap(Self);
end;

procedure Debug(TPA: TPointArray; Color: TColor = $0000FF); overload;
var
  BMP: TMufasaBitmap;
begin
  BMP.FromClient();
  BMP.DrawTPA(TPA, Color);
  BMP.Debug();
  BMP.Free();
end;

procedure Debug(ATPA: T2DPointArray); overload;
var
  BMP: TMufasaBitmap;
  TPA: TPointArray;
begin
  BMP.FromClient();

  for TPA in ATPA do
    BMP.DrawTPA(TPA, Random($FFFFFF));

  BMP.Debug();
  BMP.Free();
end;

procedure Debug(R: TRectangle; Color: TColor = $0000FF); overload;
begin
  Debug(R.ToTPA.Connect(), Color);
end;

procedure Debug(B: TBox; Color: TColor = $0000FF); overload;
begin
  Debug(EdgeFromBox(B), Color);
end;

procedure Debug(Boxes: TBoxArray); overload;
var
  B: TBox;
  ATPA: T2DPointArray;
begin
  for B in Boxes do
    ATPA := ATPA + EdgeFromBox(B);

  Debug(ATPA);
end;
