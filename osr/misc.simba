(*
Misc
====
*)

{$DEFINE SRL_MISC_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}


(*
SRL.GetXPAtLevel
~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.GetXPAtLevel(level:Int32): Int32;

Given a level it returns the minimum XP needed for it.
*)
function TSRL.GetXPAtLevel(level:Int32): Int32; constref;
var
  total:Double;
  i:Int32;
begin
  for i:=1 to level-1 do
    total += Floor(i + 300 * 2 ** (i / 7));
  Result := Floor(total / 4);
end;

(*
SRL.GetLevelAtXP
~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.GetLevelAtXP(XP:UInt32): Int32;

Given some XP, it returns what level that is.
*)
function TSRL.GetLevelAtXP(XP:UInt32): Int32; constref;
var 
  total:Double;
begin
  while (total < XP*4+1) do
  begin  
    Inc(Result);
    total += Floor(Result + 300 * 2 ** (Result / 7));
  end;
end;

(*
SRL.GetItemAmount
~~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.GetItemAmount(Area: TBox): Int32;

For use with items in like bankscreen, inventory, shops and so on to
get the number of stacked items there are.
*)
function TSRL.GetItemAmount(Area: TBox): Int32; constref;
const
  TEXT_COLORS: TIntegerArray = [$00FFFF, $00FEFE, $FFFFFF, $80FF00]; // Million = white | Billion = green etc.
var
  I: Integer;
  Text: String;
  TPA: TPointArray;
begin
  for I := 0 to High(TEXT_COLORS) do
    if SRL.FindColors(TPA, CTS0(TEXT_COLORS[I]), Area) then
    begin
      Text := OCR.Recognize(TPA, RS_FONTSET_PLAIN_11);
      Result := StrToIntDef(ExtractFromStr(Text, Numbers), 0);

      if Pos('K', Text) > 0 then
        Result := Result * 1000;
      if Pos('M', Text) > 0 then
        Result := Result * 1000000;

      Exit;
    end;
end;

(*
SRL.AvgBrightness
~~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.AvgBrightness(B: TBox): Int32;

Returns the average brightness of a area on the screen. 
Returns a value between ``0`` and ``100``, ``0`` being black.
*)
function TSRL.AvgBrightness(B: TBox): Int32; constref;
var
  BMP: TMufasaBitmap;
begin
  BMP.FromClient(B);
  Result := BMP.AvgBrightness();
  BMP.Free();
end;

(*
SRL.PeakBrightness
~~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.PeakBrightness(B: TBox): Int32;

Returns the peak brightness of a area on the screen. 
Returns a value between ``0`` and ``100``, ``0`` being black.
*)
function TSRL.PeakBrightness(B: TBox): Int32; constref;
var
  BMP: TMufasaBitmap;
begin
  BMP.FromClient(B);
  Result := BMP.PeakBrightness();
  BMP.Free();
end;

function TSRL.FormatNumber(n:Extended; dec:Byte = 3): String; constref;
var
  i: Int32;
  f: Extended := n;
begin
  while (Abs(f) >= 1000) do
  begin
    Inc(i);
    f := f / 1000;
  end;

  Result := FloatToStr(Round(f,dec)) + (['','K','M','B','T'])[i]
end;



