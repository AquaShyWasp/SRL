{$DEFINE SRL_PLAYER_INCLUDED}
{$IFNDEF OSRS}
  {$include_once SRL/osr.simba}
{$ENDIF}

type
  PRSPlayer = ^TRSPlayer;

  TRSPlayerLoginEvent = procedure(Player: PRSPlayer);

  TRSPlayer = record
    LoginName: String;
    Password: String;
    Member: Boolean;
    Worlds: TIntegerArray;

    CurrentWorld: Int32;

    // User Data
    Data: Pointer;
    Variants: TVariantArray;

    OnLogin: TRSPlayerLoginEvent;
  end;

  TRSPlayerArray = array of TRSPlayer;

var
  Players: TRSPlayerArray;

var
  CurrentPlayer: Int32;

procedure TRSPlayerArray.Add(LoginName: String; Password: String; Member: Boolean; Worlds: TIntegerArray = []);
var
  Player: TRSPlayer;
begin
  Player.LoginName := LoginName;
  Player.Password := Password;
  Player.Member := Member;
  Player.Worlds := Worlds;

  SetLength(Player.Variants, 100);

  Self := Self + Player;
end;

procedure TRSPlayerArray.AddLoginHandler(Handler: TRSPlayerLoginEvent);
var
  I: Int32;
begin
  for I := 0 to High(Self) do
    Self[I].OnLogin := @Handler;
end;

function TRSPlayer.Login: Boolean;
begin
  if SRL.IsLoggedIn() then
    Exit(True);

  if LoginScreen.IsOpen() then
  begin
    if Self.Worlds <> [] then
    begin
      Self.CurrentWorld := Self.Worlds[Random(Length(Self.Worlds))];
      if (LoginScreen.GetCurrentWorld() <> Self.CurrentWorld) and (not LoginScreen.SwitchToWorld(Self.CurrentWorld)) then
        Exit(False);
    end;

    Result := LoginScreen.Login(Self.LoginName, Self.Password);
  end else
    Result := LobbyScreen.Play();

  if Result then
  begin
    if (@Self.OnLogin <> nil) then
      Self.OnLogin(@Self);

    Exit(True);
  end;
end;
