{$DEFINE SRL_CHATBUTTONS_INCLUDED}
{$IFNDEF OSRS}
  {$include_once SRL/osr.simba}
{$ENDIF}

const
  CHAT_BUTTON_ALL := TRSInterfaceButton.Create('All', RS_FONTSET_PLAIN_11, $FFFFFF);
  CHAT_BUTTON_GAME := TRSInterfaceButton.Create('Game', RS_FONTSET_PLAIN_11, $FFFFFF);
  CHAT_BUTTON_PUBLIC := TRSInterfaceButton.Create('Public', RS_FONTSET_PLAIN_11, $FFFFFF);
  CHAT_BUTTON_PRIVATE := TRSInterfaceButton.Create('Private', RS_FONTSET_PLAIN_11, $FFFFFF);
  CHAT_BUTTON_CLAN := TRSInterfaceButton.Create('Clan', RS_FONTSET_PLAIN_11, $FFFFFF);
  CHAT_BUTTON_TRADE := TRSInterfaceButton.Create('Trade', RS_FONTSET_PLAIN_11, $FFFFFF);
  CHAT_BUTTON_REPORT := TRSInterfaceButton.Create('Report', RS_FONTSET_PLAIN_11, $FFFFFF);

type
  TRSChatButtons = type TRSInterface;

var
  ChatButtons: TRSChatButtons;

function TRSChatButtons.IsOpen: Boolean;
begin
  Result := Self.FindButton(CHAT_BUTTON_ALL);
end;

procedure TRSChatButtons.Debug(Bitmap: TMufasaBitmap); override;
begin
  if not Self.IsOpen() then
    Exit;

  inherited();
end;

procedure TRSChatButtons.Setup(ClientMode: ERSClientMode);
begin
  Self.Name := 'Chat Buttons';
  Self.Buttons := [
    CHAT_BUTTON_ALL, CHAT_BUTTON_GAME, CHAT_BUTTON_PUBLIC, CHAT_BUTTON_PRIVATE,
    CHAT_BUTTON_CLAN, CHAT_BUTTON_TRADE, CHAT_BUTTON_REPORT
  ];

  if ClientMode in [RS_CLIENT_FIXED, RS_CLIENT_RESIZABLE_CLASSIC, RS_CLIENT_RESIZABLE_BOTTOM] then
  begin
    Alignment.Left := [@RootInterface.X1];
    Alignment.Right := [@RootInterface.X1, 518];
    Alignment.Top := [@RootInterface.Y2, -22];
    Alignment.Bottom := [@RootInterface.Y2];
  end;
end;

begin
  SRL.AddSetupMethod(@ChatButtons.Setup);
  SRL.AddDebugMethod(@ChatButtons.Debug);
end;
